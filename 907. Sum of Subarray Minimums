Input: arr = [3,1,2,4]
Output: 17
Explanation: 
Subarrays are [3], [1], [2], [4], [3,1], [1,2], [2,4], [3,1,2], [1,2,4], [3,1,2,4]. 
Minimums are 3, 1, 2, 4, 1, 1, 2, 1, 1, 1.
Sum is 17.


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

class Solution:
    def sumSubarrayMins(self, arr: List[int]) -> int:
        arr.append(0)
        stack=[-1]
        res=0 
        for i in range(len(arr)):
            print(stack[-1])
            while(arr[i]<arr[stack[-1]]):
                
                idx=stack.pop()
                res+=arr[idx]*(i-idx)*(idx-stack[-1])
                print("/",res)
            stack.append(i)
        return(res%(10**9+7))
